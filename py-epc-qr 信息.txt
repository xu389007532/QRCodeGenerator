transaction.py 根据需求, 修改了以下信息.
1.
    @beneficiary.setter
    def beneficiary(self, value: str) -> None:
        """
        Set and validate EPC beneficiary entry.
        """
        #不做check_beneficiary
        # validate(check_beneficiary(value))
        self.__beneficiary = value

2.
    @amount.setter
    def amount(self, value):
        """
        Set and validate EPC amount entry.
        """
        #不做check_amount, 价钱改为"EUR"+value
        # validate(check_amount(value))
        # self.__amount = "EUR{:.2f}".format(float(value))
        if value=='':
            self.__amount = ""
        else:
            self.__amount = "EUR"+value

3. 
class epc_qr:
    """
    Class containing epc qr code specification and its conversion to image/text.
    """

    def __init__(
        self,
        version: str,
        encoding: int,
        bic: str,
        beneficiary: str,
        iban: str,
        # amount: float,
        amount: str,
        purpose: str,
        remittance_structured: str,
        remittance_unstructured: str,
        originator_information: str,
    ):

4. 
    @remittance_unstructured.setter
    def remittance_unstructured(self, value) -> None:
        """
        Set and validate EPC unstructured remittance entry.
        """
        #不做check_remittance_unstructured
        # validate(check_remittance_unstructured(value))
        self.__remittance_unstructured = value


5.
    def to_qr(self, file_name: str = "qr.png"):
        """
        Write EPC-compliant string to png image `file_name`
        """
        qr = qrcode.QRCode(
            version=6,
            error_correction=qrcode.constants.ERROR_CORRECT_M,
        )
        qr.add_data(self.to_str())
        qr.make()
        img = qr.make_image()
        img.save(file_name)
        # print("created image")		#不要print